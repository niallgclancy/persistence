formula = pelagics~ scale(F_MAUG_HIS),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "ml")
summary(test.mod.sig)
loocv(test.mod.sig) #0.330
loocv(test.mod.size) #0.330
#Size
test.mod.size<- spglm(
formula = pelagics~ scale(F_MAUG_HIS),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "ml")
summary(test.mod.size)
loocv(test.mod.size) #0.330
#obs_smallfrag=subset(obs2,obs2$Length_km<200)
#ReachL
test.mod.sig<- spglm(
formula = pelagics~ scale(Length_km),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "ml")
summary(test.mod.sig)
loocv(test.mod.sig)
#Pisciv
test.mod.sig<- spglm(
formula = pelagics~ scale(nnPreds),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "ml")
summary(test.mod.sig)
loocv(test.mod.sig)
#Full Model with interactions
test.mod<- spglm(
formula = pelagics~ scale(S1_93_11)*scale(F_MAUG_HIS)*scale(Length_km),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "ml")
#Full Model with interactions
test.mod<- spglm(
formula = pelagics~ scale(F_MAUG_HIS)*scale(Length_km),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "ml")
summary(test.mod)
loocv(test.mod) #0.322 best model
loocv(test.mod.null)
#Refit with REML
test.mod<- spglm(
formula = pelagics~ scale(S1_93_11)*scale(F_MAUG_HIS)*scale(DSbarrier)*scale(Length_km)*scale(nnPreds),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "reml")
#Refit with REML
test.mod<- spglm(
formula = pelagics~ scale(S1_93_11)*scale(F_MAUG_HIS)*scale(DSbarrier)*scale(Length_km),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "reml")
#Refit with REML
test.mod<- spglm(
formula = pelagics~ scale(S1_93_11)*scale(F_MAUG_HIS)*scale(Length_km),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "reml")
#Refit with REML
test.mod<- spglm(
formula = pelagics~ scale(F_MAUG_HIS)*scale(Length_km),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "reml")
summary(test.mod)
loocv(test.mod) #0.313
#Refit with REML
test.mod<- spglm(
formula = pelagics~ scale(Length_km),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "reml")
summary(test.mod)
loocv(test.mod) #0.313
#No interactions with REML
test.mod<- spglm(
formula = pelagics~ scale(Length_km),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "reml")
summary(test.mod)
loocv(test.mod)
loocv(test.mod.nonspatial)#0.328
#Non-Spatial Model
test.mod.nonspatial<- spglm(
formula = pelagics~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "ml", spcov_type = "none")
summary(test.mod.nonspatial)
loocv(test.mod.nonspatial)#0.328
#Non-Spatial Model
test.mod.nonspatial<- spglm(
formula = pelagics~ scale(Length_km),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "ml", spcov_type = "none")
summary(test.mod.nonspatial)
loocv(test.mod.nonspatial)#0.446
coeff%>%arrange(Score2) %>%
mutate(Variable=factor(Variable, levels=Variable)) %>%
ggplot(aes(x=Variable, y=Score2)) +
geom_segment( aes(xend=Variable, y=0,yend=Score2)) +
geom_point( color="purple", size=4) +
theme_light() +
theme(
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.ticks.x = element_blank()
) +
xlab("") +
coord_flip() +
ylab("Variable Importance")
relict=obs2%>%pivot_longer(cols=32:124,names_to = "Species", values_to = "change")
####FROM HERE, MUST RUN "DatasetPrep.R" for section
relict=subset(relict,!is.na(relict$change))
traits=read.csv("traits.csv")
traits=traits%>%rename("Species"="Code")
relict=left_join(relict,traits,by="Species")
relict$Status[which(relict$Species=="RDSH")]="Native"
relict$Status[which(relict$Species=="RDSH" & relict$RepeatID %in% rdshnn)]="Introduced"
relict$Status[which(relict$Species=="LKCH" & relict$RepeatID %in% lkchnn)]="Introduced"
relict$Status[which(relict$Species=="FHMN" & relict$RepeatID %in% FHMNnn)]="Introduced"
relict$Status[which(relict$Species=="LNDC" & relict$RepeatID %in% LNDCnn)]="Introduced"
relict$Status[which(relict$Species=="CRCH" & relict$RepeatID %in% CRCHnn)]="Introduced"
relict$Status[which(relict$Species=="BLBH")]="Native"
relict$Status[which(relict$Species=="BLBH" & relict$RepeatID %in% BLBHnn)]="Introduced"
relict$Status[which(relict$Species=="CCAT" & relict$RepeatID %in% CCATnn)]="Introduced"
relict$Status[which(relict$Species=="LING" & relict$RepeatID %in% LINGnn)]="Introduced"
relict$Status[which(relict$Species=="WSU" & relict$RepeatID %in% WSUnn)]="Introduced"
relict$Status[which(relict$Species=="RMCT" & relict$RepeatID %in% RMCTnn)]="Introduced"
relict$Status[which(relict$Species=="DRUM")]="Native"
relict$Status[which(relict$Species=="DRUM" & relict$RepeatID %in% drumnn)]="Introduced"
relict$Status[which(relict$Species=="PKF")]="Native"
relict$Status[which(relict$Species=="PKF" & relict$RepeatID %in% pkfnn)]="Introduced"
relict$Status[which(relict$Species=="PTMN")]="Native"
relict$Status[which(relict$Species=="PTMN" & relict$RepeatID %in% ptmnnn)]="Introduced"
relict$Status[which(relict$Species=="BRSB")]="Native"
relict$Status[which(relict$Species=="BRSB" & relict$RepeatID %in% brsbnn)]="Introduced"
relict=subset(relict,relict$Status=="Native")
relict=relict[,-c(39:53)]
#relict=relict%>%pivot_wider(names_from = "Species",values_from = "change")
#Create Small Glaical relict persistence column
flowavgs=read.csv("FlowAverages.csv")
traits=read.csv("traits.csv")
traits=traits%>%rename("Species"="Code")
traits=left_join(traits,flowavgs,by="Species")
smallrelicts=subset(traits, traits$Glacial=="E" & traits$FlowMedian<50)
smallrelicts=smallrelicts$Species
relict$X=NULL
obsrelict=relict
obsrelict=subset(obsrelict,obsrelict$Species%in%smallrelicts)
obsrelict=subset(obsrelict,!is.na(obsrelict$change))
obsrelcol=obsrelict%>%group_by(RepeatID)%>%summarise(persSmGlacial=mean(change))
obsrelcol$geometry=NULL
obs2=left_join(obs2,obsrelcol,by="RepeatID")
#Convert 0 and 1 for beta regression
obs2$persSmGlacial[which(obs2$persSmGlacial==0)]=0.0000001
obs2$persSmGlacial[which(obs2$persSmGlacial==1)]=0.9999999
obsMO=obs2%>%filter(PU!="GR")
obs2=obs
relict=obs2%>%pivot_longer(cols=32:124,names_to = "Species", values_to = "change")
####FROM HERE, MUST RUN "DatasetPrep.R" for section
relict=subset(relict,!is.na(relict$change))
traits=read.csv("traits.csv")
traits=traits%>%rename("Species"="Code")
relict=left_join(relict,traits,by="Species")
relict$Status[which(relict$Species=="RDSH")]="Native"
relict$Status[which(relict$Species=="RDSH" & relict$RepeatID %in% rdshnn)]="Introduced"
relict$Status[which(relict$Species=="LKCH" & relict$RepeatID %in% lkchnn)]="Introduced"
relict$Status[which(relict$Species=="FHMN" & relict$RepeatID %in% FHMNnn)]="Introduced"
relict$Status[which(relict$Species=="LNDC" & relict$RepeatID %in% LNDCnn)]="Introduced"
relict$Status[which(relict$Species=="CRCH" & relict$RepeatID %in% CRCHnn)]="Introduced"
relict$Status[which(relict$Species=="BLBH")]="Native"
relict$Status[which(relict$Species=="BLBH" & relict$RepeatID %in% BLBHnn)]="Introduced"
relict$Status[which(relict$Species=="CCAT" & relict$RepeatID %in% CCATnn)]="Introduced"
relict$Status[which(relict$Species=="LING" & relict$RepeatID %in% LINGnn)]="Introduced"
relict$Status[which(relict$Species=="WSU" & relict$RepeatID %in% WSUnn)]="Introduced"
relict$Status[which(relict$Species=="RMCT" & relict$RepeatID %in% RMCTnn)]="Introduced"
relict$Status[which(relict$Species=="DRUM")]="Native"
relict$Status[which(relict$Species=="DRUM" & relict$RepeatID %in% drumnn)]="Introduced"
relict$Status[which(relict$Species=="PKF")]="Native"
relict$Status[which(relict$Species=="PKF" & relict$RepeatID %in% pkfnn)]="Introduced"
relict$Status[which(relict$Species=="PTMN")]="Native"
relict$Status[which(relict$Species=="PTMN" & relict$RepeatID %in% ptmnnn)]="Introduced"
relict$Status[which(relict$Species=="BRSB")]="Native"
relict$Status[which(relict$Species=="BRSB" & relict$RepeatID %in% brsbnn)]="Introduced"
relict=subset(relict,relict$Status=="Native")
relict=relict[,-c(39:53)]
#relict=relict%>%pivot_wider(names_from = "Species",values_from = "change")
#Create Small Glaical relict persistence column
flowavgs=read.csv("FlowAverages.csv")
traits=read.csv("traits.csv")
traits=traits%>%rename("Species"="Code")
traits=left_join(traits,flowavgs,by="Species")
smallrelicts=subset(traits, traits$Glacial=="E" & traits$FlowMedian<50)
smallrelicts=smallrelicts$Species
relict$X=NULL
obsrelict=relict
obsrelict=subset(obsrelict,obsrelict$Species%in%smallrelicts)
obsrelict=subset(obsrelict,!is.na(obsrelict$change))
obsrelcol=obsrelict%>%group_by(RepeatID)%>%summarise(persSmGlacial=mean(change))
obsrelcol$geometry=NULL
obs2=left_join(obs2,obsrelcol,by="RepeatID")
#Convert 0 and 1 for beta regression
obs2$persSmGlacial[which(obs2$persSmGlacial==0)]=0.0000001
obs2$persSmGlacial[which(obs2$persSmGlacial==1)]=0.9999999
obsMO=obs2%>%filter(PU!="GR")
#Non-Spatial REML Model with interactions
nsGlacial<- spglm(
formula = persSmGlacial~ scale(S1_93_11)*scale(F_MAUG_HIS)*scale(DSbarrier)*scale(Length_km)*scale(nnPreds),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "reml", spcov_type = "none")
summary(nsGlacial)
loocv(nsGlacial)#0.322
st_write(obs2, "SmGlacial.shp",append = F)
obs2=obs
relict=obs2%>%pivot_longer(cols=32:124,names_to = "Species", values_to = "change")
relict=subset(relict,!is.na(relict$change))
traits=read.csv("traits.csv")
traits=traits%>%rename("Species"="Code")
relict=left_join(relict,traits,by="Species")
relict$Status[which(relict$Species=="RDSH")]="Native"
relict$Status[which(relict$Species=="RDSH" & relict$RepeatID %in% rdshnn)]="Introduced"
relict$Status[which(relict$Species=="LKCH" & relict$RepeatID %in% lkchnn)]="Introduced"
relict$Status[which(relict$Species=="FHMN" & relict$RepeatID %in% FHMNnn)]="Introduced"
relict$Status[which(relict$Species=="LNDC" & relict$RepeatID %in% LNDCnn)]="Introduced"
relict$Status[which(relict$Species=="CRCH" & relict$RepeatID %in% CRCHnn)]="Introduced"
relict$Status[which(relict$Species=="BLBH")]="Native"
relict$Status[which(relict$Species=="BLBH" & relict$RepeatID %in% BLBHnn)]="Introduced"
relict$Status[which(relict$Species=="CCAT" & relict$RepeatID %in% CCATnn)]="Introduced"
relict$Status[which(relict$Species=="LING" & relict$RepeatID %in% LINGnn)]="Introduced"
relict$Status[which(relict$Species=="WSU" & relict$RepeatID %in% WSUnn)]="Introduced"
relict$Status[which(relict$Species=="RMCT" & relict$RepeatID %in% RMCTnn)]="Introduced"
relict$Status[which(relict$Species=="DRUM")]="Native"
relict$Status[which(relict$Species=="DRUM" & relict$RepeatID %in% drumnn)]="Introduced"
relict$Status[which(relict$Species=="PKF")]="Native"
relict$Status[which(relict$Species=="PKF" & relict$RepeatID %in% pkfnn)]="Introduced"
relict$Status[which(relict$Species=="PTMN")]="Native"
relict$Status[which(relict$Species=="PTMN" & relict$RepeatID %in% ptmnnn)]="Introduced"
relict$Status[which(relict$Species=="BRSB")]="Native"
relict$Status[which(relict$Species=="BRSB" & relict$RepeatID %in% brsbnn)]="Introduced"
relict=subset(relict,relict$Status=="Native")
relict=relict[,-c(39:53)]
#Create Periodic LH persistence column
flowavgs=read.csv("FlowAverages.csv")
traits=read.csv("traits.csv")
traits=traits%>%rename("Species"="Code")
traits=left_join(traits,flowavgs,by="Species")
pelagics=subset(traits, traits$Species=="STCH"|traits$Species=="SFCH"|traits$Species=="FHCH"|traits$Species=="PLMN")
pelagics=pelagics$Species
relict$X=NULL
pela=relict
pela=subset(pela,pela$Species%in%pelagics)
pela=subset(pela,!is.na(pela$change))
obsrelcol=pela%>%group_by(RepeatID)%>%summarise(pelagics=mean(change))
obsrelcol$geometry=NULL
obs2=left_join(obs2,obsrelcol,by="RepeatID")
#Convert 0 and 1 for beta regression
obs2$pelagics[which(obs2$pelagics==0)]=0.0000001
obs2$pelagics[which(obs2$pelagics==1)]=0.9999999
#obsMO=obs2%>%filter(PU!="GR")
st_write(obs2, "Pelagics.shp",append = F)
#----- Fit model for Periodic Life History-------------------------------------------
obs2=obs
relict=obs2%>%pivot_longer(cols=32:124,names_to = "Species", values_to = "change")
relict=subset(relict,!is.na(relict$change))
traits=read.csv("traits.csv")
traits=traits%>%rename("Species"="Code")
relict=left_join(relict,traits,by="Species")
relict$Status[which(relict$Species=="RDSH")]="Native"
relict$Status[which(relict$Species=="RDSH" & relict$RepeatID %in% rdshnn)]="Introduced"
relict$Status[which(relict$Species=="LKCH" & relict$RepeatID %in% lkchnn)]="Introduced"
relict$Status[which(relict$Species=="FHMN" & relict$RepeatID %in% FHMNnn)]="Introduced"
relict$Status[which(relict$Species=="LNDC" & relict$RepeatID %in% LNDCnn)]="Introduced"
relict$Status[which(relict$Species=="CRCH" & relict$RepeatID %in% CRCHnn)]="Introduced"
relict$Status[which(relict$Species=="BLBH")]="Native"
relict$Status[which(relict$Species=="BLBH" & relict$RepeatID %in% BLBHnn)]="Introduced"
relict$Status[which(relict$Species=="CCAT" & relict$RepeatID %in% CCATnn)]="Introduced"
relict$Status[which(relict$Species=="LING" & relict$RepeatID %in% LINGnn)]="Introduced"
relict$Status[which(relict$Species=="WSU" & relict$RepeatID %in% WSUnn)]="Introduced"
relict$Status[which(relict$Species=="RMCT" & relict$RepeatID %in% RMCTnn)]="Introduced"
relict$Status[which(relict$Species=="DRUM")]="Native"
relict$Status[which(relict$Species=="DRUM" & relict$RepeatID %in% drumnn)]="Introduced"
relict$Status[which(relict$Species=="PKF")]="Native"
relict$Status[which(relict$Species=="PKF" & relict$RepeatID %in% pkfnn)]="Introduced"
relict$Status[which(relict$Species=="PTMN")]="Native"
relict$Status[which(relict$Species=="PTMN" & relict$RepeatID %in% ptmnnn)]="Introduced"
relict$Status[which(relict$Species=="BRSB")]="Native"
relict$Status[which(relict$Species=="BRSB" & relict$RepeatID %in% brsbnn)]="Introduced"
relict=subset(relict,relict$Status=="Native")
relict=relict[,-c(39:53)]
#Create Periodic LH persistence column
flowavgs=read.csv("FlowAverages.csv")
traits=read.csv("traits.csv")
traits=traits%>%rename("Species"="Code")
traits=left_join(traits,flowavgs,by="Species")
periodics=subset(traits, traits$LifeHist=="Per" #& traits$FlowMedian<150
)
#periodics=subset(periodics, periodics$Species=="WSU" | periodics$Species=="RTCH"|periodics$Species=="FMSU"|periodics$Species=="LNSU"|periodics$Species=="BHSU"|periodics$Species=="GILA"|periodics$Species=="GR")
periodics=periodics$Species
relict$X=NULL
peri=relict
peri=subset(peri,peri$Species%in%periodics)
peri=subset(peri,!is.na(peri$change))
obsrelcol=peri%>%group_by(RepeatID)%>%summarise(periodics=mean(change))
obsrelcol$geometry=NULL
obs2=left_join(obs2,obsrelcol,by="RepeatID")
#Convert 0 and 1 for beta regression
obs2$periodics[which(obs2$periodics==0)]=0.0000001
obs2$periodics[which(obs2$periodics==1)]=0.9999999
library(PerformanceAnalytics)
obsper=obs2%>%filter(!is.na(periodics))
mdata=obsper[,c(14,19,20,21,22,23,30,31)]
mdata=as.data.frame(mdata)
mdata$geometry=NULL
chart.Correlation(mdata, histogram=TRUE, pch=19)
#Full Model--Cant run with nnPreds
test.mod<- spglm(
formula = periodics~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "ml")
summary(test.mod)
loocv(test.mod)
plot(periodics~S1_93_11,data = obs2, main="Periodics Persistence vs. Temperature")
plot(periodics~F_MAUG_HIS,data = obs2, main="Periodics Persistence vs. Stream Size")
plot(periodics~DSbarrier,data = obs2, main="Periodics Persistence vs. Barriers")
plot(periodics~Length_km,data = obs2, main="Periodics Persistence vs. Fragment Length")
plot(periodics~nnPreds,data = obs2, main="Periodics vs. Piscivores")
####Compare to intercept only (null)
test.mod.null<- spglm(
formula = periodics~ 1,
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "ml")
summary(test.mod.null)
loocv(test.mod.null)
#Temp
test.mod.sig<- spglm(
formula = periodics~ scale(S1_93_11),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "ml")
summary(test.mod.sig)
loocv(test.mod.sig)
#Size
test.mod.sig<- spglm(
formula = periodics~ scale(F_MAUG_HIS),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "ml")
summary(test.mod.sig)
loocv(test.mod.sig) #0.330
#Barrier
test.mod.sig<- spglm(
formula = periodics~ scale(DSbarrier),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "ml")
summary(test.mod.sig)
loocv(test.mod.sig)
#ReachL
test.mod.sig<- spglm(
formula = periodics~ scale(Length_km),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "ml")
summary(test.mod.sig)
loocv(test.mod.sig)
#Pisciv
test.mod.sig<- spglm(
formula = periodics~ scale(nnPreds),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "ml")
summary(test.mod.sig)
loocv(test.mod.sig)
#Full Model with interactions
test.mod<- spglm(
formula = periodics~ scale(S1_93_11)*scale(F_MAUG_HIS)*scale(DSbarrier)*scale(Length_km)*scale(nnPreds),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "ml")
summary(test.mod)
loocv(test.mod) #0.322 best model
summary(test.mod.sig)
#Full Model with interactions
test.mod<- spglm(
formula = periodics~ *scale(F_MAUG_HIS)*scale(DSbarrier)*scale(Length_km)*scale(nnPreds),
#Full Model with interactions
test.mod<- spglm(
formula = periodics~ *scale(F_MAUG_HIS)*scale(DSbarrier)*scale(Length_km)*scale(nnPreds),
#Full Model with interactions
test.mod<- spglm(
formula = periodics~ scale(F_MAUG_HIS)*scale(DSbarrier)*scale(Length_km)*scale(nnPreds),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "ml")
#Full Model with interactions
test.mod<- spglm(
formula = periodics~ scale(F_MAUG_HIS)*scale(DSbarrier)*scale(Length_km),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "ml")
summary(test.mod)
loocv(test.mod) #0.385
#Full Model with interactions
test.mod<- spglm(
formula = periodics~ scale(DSbarrier)*scale(Length_km),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "ml")
summary(test.mod)
loocv(test.mod) #0.385
#ReachL
test.mod.sig<- spglm(
formula = periodics~ scale(Length_km),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "ml")
summary(test.mod.sig)
loocv(test.mod.sig) #0.382
#Barrier
test.mod.sig<- spglm(
formula = periodics~ scale(DSbarrier),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "ml")
summary(test.mod.sig)
loocv(test.mod.sig)
#Size
test.mod.sig<- spglm(
formula = periodics~ scale(F_MAUG_HIS),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "ml")
summary(test.mod.sig)
loocv(test.mod.sig) #0.330
#Full Model with interactions
test.mod<- spglm(
formula = periodics~ scale(F_MAUG_HIS)*scale(Length_km),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "ml")
summary(test.mod)
loocv(test.mod) #0.385
#Full Model with interactions
test.mod<- spglm(
formula = periodics~ scale(F_MAUG_HIS)+scale(Length_km),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "ml")
summary(test.mod)
loocv(test.mod) #0.385
#Full Model with interactions
test.mod<- spglm(
formula = periodics~ scale(F_MAUG_HIS),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "ml")
summary(test.mod)
loocv(test.mod) #0.385
#Refit with REML
test.mod<- spglm(
formula = periodics~ scale(F_MAUG_HIS)*scale(Length_km),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "reml")
summary(test.mod)
loocv(test.mod) #0.313
#Refit with REML
test.mod<- spglm(
formula = periodics~ scale(F_MAUG_HIS)+scale(Length_km),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "reml")
summary(test.mod)
loocv(test.mod) #0.313
#Refit with REML
test.mod<- spglm(
formula = periodics~ scale(Length_km),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "reml")
summary(test.mod)
loocv(test.mod) #0.313
#ReachL
test.mod.sig<- spglm(
formula = periodics~ scale(Length_km),
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "ml")
summary(test.mod.sig)
loocv(test.mod.sig) #0.382
####Compare to intercept only (null)
test.mod.null<- spglm(
formula = periodics~ 1,
family = "beta",
random = ~as.factor(Yrange),
data = obs2, estmethod = "ml")
summary(test.mod.null)
loocv(test.mod.null)
st_write(obs2, "Periodics.shp",append = F)
