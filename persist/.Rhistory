formula =   PLMN~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(Length_km)+scale(nnPreds), #all sites must have a DS barrier (or not)---wouldn't run with it
family = "binomial",
ssn.object = nssn,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(Yrange),
additive = "afvArea", estmethod = "ml")
summary(PLMN.global)
loocv_mod <- loocv(PLMN.global)
print(loocv_mod$RMSPE)
#PLSU
PLSU.global <- ssn_glm(
formula =   PLSU~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "binomial",
ssn.object = nssn,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(Yrange),
additive = "afvArea", estmethod = "ml")
summary(PLSU.global)
loocv_mod <- loocv(PLSU.global)
print(loocv_mod$RMSPE)
#SPDC
SPDC.global <- ssn_glm(
formula =   SPDC~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "binomial",
ssn.object = nssn,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(Yrange),
additive = "afvArea", estmethod = "ml")
summary(SPDC.global)
loocv_mod <- loocv(SPDC.global)
print(loocv_mod$RMSPE)
#WSU
WSU.global <- ssn_glm(
formula =   WSU~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "binomial",
ssn.object = nssn,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(Yrange),
additive = "afvArea", estmethod = "ml")
summary(WSU.global)
loocv_mod <- loocv(WSU.global)
print(loocv_mod$RMSPE)
#BLBH
BLBH.global <- ssn_glm(
formula =   BLBH~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "binomial",
ssn.object = nssn,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(Yrange),
additive = "afvArea", estmethod = "ml")
summary(BLBH.global)
loocv_mod <- loocv(BLBH.global)
print(loocv_mod$RMSPE)
#EB
EB.global <- ssn_glm(
formula =   EB~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "binomial",
ssn.object = nssn,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(Yrange),
additive = "afvArea", estmethod = "ml")
summary(EB.global)
loocv_mod <- loocv(EB.global)
print(loocv_mod$RMSPE)
#RSSH
RSSH.global <- ssn_glm(
formula =   RSSH~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "binomial",
ssn.object = nssn,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(Yrange),
additive = "afvArea", estmethod = "ml")
summary(RSSH.global)
loocv_mod <- loocv(RSSH.global)
print(loocv_mod$RMSPE)
################################
###############################Beta Regression for proportion metrics not working 11-19-2024
###############################
##Scale covariates to determine variable importance
ssn_mod <- ssn_glm(
formula =   persComm~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
ssn.object = nssn2,
#tailup_type = "exponential",
#taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(Yrange),
#spcov_initial=1,
#dispersion_initial = 1,
#spcov_type = "sar",
additive = "afvArea", estmethod = "ml"
)
################################
###############################Beta Regression for proportion metrics not working 11-19-2024
###############################
##Scale covariates to determine variable importance
ssn_mod <- ssn_glm(
formula =   persComm~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
ssn.object = nssn2,
#tailup_type = "exponential",
#taildown_type = "exponential",
#euclid_type = "exponential",
random = ~as.factor(Yrange),
#spcov_initial=1,
#dispersion_initial = 1,
#spcov_type = "sar",
additive = "afvArea", estmethod = "ml"
)
################################
###############################Beta Regression for proportion metrics not working 11-19-2024
###############################
##Scale covariates to determine variable importance
ssn_mod <- ssn_glm(
formula =   persComm~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
ssn.object = nssn2,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(Yrange),
spcov_initial=1,
#dispersion_initial = 1,
#spcov_type = "sar",
additive = "afvArea", estmethod = "reml"
)
################################
###############################Beta Regression for proportion metrics not working 11-19-2024
###############################
##Scale covariates to determine variable importance
ssn_mod <- ssn_glm(
formula =   persComm~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
ssn.object = nssn2,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(Yrange),
spcov_initial=1,
#dispersion_initial = 1,
spcov_type = "sar",
additive = "afvArea", estmethod = "reml"
)
################################
###############################Beta Regression for proportion metrics not working 11-19-2024
###############################
##Scale covariates to determine variable importance
ssn_mod <- ssn_glm(
formula =   persComm~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
ssn.object = nssn2,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(Yrange),
#spcov_initial=1,
dispersion_initial = 1,
#spcov_type = "sar",
additive = "afvArea", estmethod = "reml"
)
################################
###############################Beta Regression for proportion metrics not working 11-19-2024
###############################
##Scale covariates to determine variable importance
ssn_mod <- ssn_glm(
formula =   persComm~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
ssn.object = nssn2,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(Yrange),
#spcov_initial=1,
#dispersion_initial = 1,
#spcov_type = "sar",
#additive = "afvArea", estmethod = "reml"
)
################################
###############################Beta Regression for proportion metrics not working 11-19-2024
###############################
##Scale covariates to determine variable importance
ssn_mod <- ssn_glm(
formula =   persComm~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
ssn.object = nssn2,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(Yrange),
#spcov_initial=1,
#dispersion_initial = 1,
#spcov_type = "sar",
additive = "afvArea", estmethod = "reml"
)
################################
###############################Beta Regression for proportion metrics not working 11-19-2024
###############################
##Scale covariates to determine variable importance
ssn_mod <- ssn_glm(
formula =   persComm~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
ssn.object = nssn2,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
#random = ~as.factor(Yrange),
#spcov_initial=1,
#dispersion_initial = 1,
#spcov_type = "sar",
additive = "afvArea", estmethod = "reml"
)
################################
###############################Beta Regression for proportion metrics not working 11-19-2024
###############################
##Scale covariates to determine variable importance
ssn_mod <- ssn_glm(
formula =   persComm~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
ssn.object = nssn2,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(Yrange),
#spcov_initial=1,
#dispersion_initial = 1,
#spcov_type = "sar",
nugget_type = "none",
additive = "afvArea", estmethod = "reml"
)
################################
###############################Beta Regression for proportion metrics not working 11-19-2024
###############################
##Scale covariates to determine variable importance
ssn_mod <- ssn_glm(
formula =   persComm~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
ssn.object = nssn2,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(Yrange),
#spcov_initial=1,
#dispersion_initial = 1,
#spcov_type = "sar",
nugget_type = "nugget",
additive = "afvArea", estmethod = "reml"
)
######Attempt with spmodel using euclidean only
library(spmodel)
bin_mod <- spglm(
formula = persComm~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
data = nssn2,
spcov_type = "none"
)
class(obs)
obs2=obs
obs2$persComm[which(obs2$persComm==0)]=0.000000001
obs2$persComm[which(obs2$persComm==1)]=0.999999999
test.mod<- spglm(
formula = persComm~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
data = obs2,
spcov_type = "none"
)
obs2$persComm[which(obs2$persComm==0)]=0.0000001
obs2$persComm[which(obs2$persComm==1)]=0.9999999
test.mod<- spglm(
formula = persComm~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
data = obs2,
spcov_type = "none"
)
test.mod<- spglm(
formula = persComm~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "binomial",
data = obs2,
spcov_type = "none"
)
test.mod<- spglm(
formula = persComm~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
data = obs2,
spcov_type = "none"
)
test.mod<- spglm(
formula = persComm~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
data = obs2
)
summary(test.mod)
################################
###############################Beta Regression for proportion metrics not working 11-19-2024
###############################
##Scale covariates to determine variable importance
ssn_mod <- ssn_glm(
formula =   persComm~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
ssn.object = nssn2,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(Yrange),
#spcov_initial=1,
#dispersion_initial = 1,
spcov_type = "exponential"
additive = "afvArea", estmethod = "reml"
################################
###############################Beta Regression for proportion metrics not working 11-19-2024
###############################
##Scale covariates to determine variable importance
ssn_mod <- ssn_glm(
formula =   persComm~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
ssn.object = nssn2,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(Yrange),
#spcov_initial=1,
#dispersion_initial = 1,
spcov_type = "exponential",
additive = "afvArea", estmethod = "reml"
)
test.mod<- spglm(
formula = persComm~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
random = ~as.factor(Yrange),
data = obs2
)
summary(test.mod)
#Native Sp. Persistence
obs2$persNative[which(obs2$persNative==0)]=0.000000001
obs2$persNative[which(obs2$persNative==1)]=0.999999999
test.mod<- spglm(
formula = persNative~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
random = ~as.factor(Yrange),
data = obs2
)
summary(test.mod)
loocv(test.mod)
1-0.28
pairs(obs$S1_93_11~obs$nnPreds:obs$F_MAUG_HIS)
pairs(obs$S1_93_11~obs$nnPreds*obs$F_MAUG_HIS)
pairs(obs$S1_93_11~obs$F_MAUG_HIS)
pairs(obs$S1_93_11~log(obs$F_MAUG_HIS))
flowtemplm=lm(obs$S1_93_11~log(obs$F_MAUG_HIS))
summarise(flowtemplm)
summary(flowtemplm)
################################
###############################Beta Regression for proportion metrics not working 11-19-2024
###############################
##Scale covariates to determine variable importance
ssn_mod <- ssn_glm(
formula =   persComm~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
ssn.object = nssn2,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(Yrange),
#spcov_initial=1,
#dispersion_initial = 1,
spcov_type = "exponential",
additive = "afvArea", estmethod = "reml"
)
######Attempt with spmodel using euclidean only
library(spmodel)
obs2=obs
obs2$persComm[which(obs2$persComm==0)]=0.0000001
obs2$persComm[which(obs2$persComm==1)]=0.9999999
test.mod<- spglm(
formula = persComm~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
random = ~as.factor(Yrange),
data = obs2
)
summary(test.mod)
#Native Sp. Persistence
obs2$persNative[which(obs2$persNative==0)]=0.000000001
obs2$persNative[which(obs2$persNative==1)]=0.999999999
test.mod<- spglm(
formula = persNative~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
random = ~as.factor(Yrange),
data = obs2
)
summary(test.mod)
loocv(test.mod)
# ---- Fit model for Native Species Persistence----------------------------
obs2$persNative[which(obs2$persNative==0)]=0.000000001
obs2$persNative[which(obs2$persNative==1)]=0.999999999
test.mod<- spglm(
formula = persNative~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
random = ~as.factor(Yrange),
data = obs2
)
# ---- Fit model for Glacial-Relict Persistence----------------------------
obs2$persGlacE[which(obs2$persGlacE==0)]=0.000000001
obs2$persGlacE[which(obs2$persGlacE==1)]=0.999999999
relict.mod<- spglm(
formula = persGlacE~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
random = ~as.factor(Yrange),
data = obs2
)
summary(test.mod)
loocv(test.mod)
summary(relict.mod)
loocv(relict.mod)
# ---- Compare to model fit to non-relicts
#Late Postglacial Colonists Persistence
obs2$persGlacL[which(obs2$persGlacL==0)]=0.000000001
obs2$persGlacL[which(obs2$persGlacL==1)]=0.999999999
nonrelict.mod<- spglm(
formula = persGlacE~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
random = ~as.factor(Yrange),
data = obs2
)
summary(nonrelict.mod)
loocv(nonrelict.mod)
mean(obs2, obs2$persGlacE)
mean(obs2$persGlacE)
obs2%>%filter(!is.na(persGlacE))%>%summarise(avg=mean(persGlacE))
obs2%>%filter(!is.na(persGlacL))%>%summarise(avg=mean(persGlacL))
#Mean persistence, uncorrected for autocorrelation shows
obs%>%filter(!is.na(persGlacE))%>%summarise(avg=mean(persGlacE))
#Mean persistence, uncorrected for autocorrelation shows
obs3=obs2
#Mean persistence, uncorrected for autocorrelation shows
obs3=obs2
as.data.frame(obs3)
obs3=as.data.frame(obs3)
obs3%>%filter(!is.na(persGlacE))%>%summarise(avg=mean(persGlacE))
obs3%>%filter(!is.na(persGlacL))%>%summarise(avg=mean(persGlacL))
#Mean persistence, uncorrected for autocorrelation or colonization
obs3=obs2
obs3=as.data.frame(obs3)
obs3%>%filter(!is.na(persGlacE))%>%summarise(avg=mean(persGlacE))
obs3%>%filter(!is.na(persGlacL))%>%summarise(avg=mean(persGlacL))
obs3%>%filter(!is.na(persComm))%>%summarise(avg=mean(persComm))
obs3%>%filter(!is.na(persNative))%>%summarise(avg=mean(persNative))
obs3%>%filter(!is.na(persGlacE))%>%summarise(avg=mean(persGlacE), sd(persGlacE)) #5%
obs3%>%filter(!is.na(persGlacL))%>%summarise(avg=mean(persGlacL))
obs3%>%filter(!is.na(persGlacL))%>%summarise(avg=mean(persGlacL), sd(persGlacL)) #53% (sd=)
obs3%>%filter(!is.na(persComm))%>%summarise(avg=mean(persComm), sd(persComm)) #
obs3%>%filter(!is.na(persNative))%>%summarise(avg=mean(persNative),sd(persNative)) #
obs3%>%filter(!is.na(persNative))%>%summarise(avg=mean(persNative),sd(persNative)) #56% (sd=32%)
## ---- Fit spatial (not stream-network) model -------------------------------
######Attempt with spmodel using euclidean only
library(spmodel)
# ---- Fit model for Community Persistence ----------------------------
obs2=obs
obs2$persComm[which(obs2$persComm==0)]=0.0000001
obs2$persComm[which(obs2$persComm==1)]=0.9999999
test.mod<- spglm(
formula = persComm~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
random = ~as.factor(Yrange),
data = obs2
)
summary(test.mod)
# ---- Fit model for Native Species Persistence----------------------------
obs2$persNative[which(obs2$persNative==0)]=0.000000001
obs2$persNative[which(obs2$persNative==1)]=0.999999999
test.mod<- spglm(
formula = persNative~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
random = ~as.factor(Yrange),
data = obs2
)
summary(test.mod)
loocv(test.mod)
# ---- Fit model for Glacial-Relict Persistence----------------------------
obs2$persGlacE[which(obs2$persGlacE==0)]=0.000000001
obs2$persGlacE[which(obs2$persGlacE==1)]=0.999999999
relict.mod<- spglm(
formula = persGlacE~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
random = ~as.factor(Yrange),
data = obs2
)
summary(relict.mod)
loocv(relict.mod)
# ---- Compare to model fit to non-relicts
obs2$persGlacL[which(obs2$persGlacL==0)]=0.000000001
obs2$persGlacL[which(obs2$persGlacL==1)]=0.999999999
nonrelict.mod<- spglm(
formula = persGlacE~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
random = ~as.factor(Yrange),
data = obs2
)
summary(nonrelict.mod)
loocv(nonrelict.mod)
