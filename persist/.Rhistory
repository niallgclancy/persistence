spcov_type = "exponential",
additive = "afvArea",
nugget_type = "none"
)
loocv(ssn_modG)#0.325
ssn_modG <- ssn_glm(
formula =   rGlac~ scale(temp)+scale(size)+scale(barrier)+scale(length)+scale(pisc),
family = "beta",
ssn.object = nssn,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(YrangeCat),
spcov_type = "exponential",
additive = "afvArea",
nugget_type = "none"
)
loocv(ssn_modG)#0.325
ssn_modG <- ssn_glm(
formula =   rGlac~ scale(temp)+scale(size)+scale(barrier)+scale(length)+scale(pisc),
family = "beta",
ssn.object = nssn,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(YrangeCat),
spcov_type = "exponential",
additive = "afvArea",
nugget_type = "none",
estmethod = "reml"
)
summary(ssn_modG)
loocv(ssn_modG)#0.325
ssn_modG <- ssn_glm(
formula =   rGlac~ scale(temp)+scale(log(size))+scale(barrier)+scale(length)+scale(pisc),
family = "beta",
ssn.object = nssn,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(YrangeCat),
spcov_type = "exponential",
additive = "afvArea",
nugget_type = "none"
)
loocv(ssn_modG)#0.325
unique(nssn$obs$GNIS_NA)
order(unique(nssn$obs$GNIS_NA))
nssn2=nssn
nssn2$obs$rGlac[which(nssn2$obs$GNIS_NA=="Yellowstone River")]=NA
ssn_modG <- ssn_glm(
formula =   rGlac~ scale(temp)+scale(size)+scale(barrier)+scale(length)+scale(pisc),
family = "beta",
ssn.object = nssn,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(YrangeCat),
spcov_type = "exponential",
additive = "afvArea",
nugget_type = "none"
)
ssn_modG <- ssn_glm(
formula =   rGlac~ scale(temp)+scale(size)+scale(barrier)+scale(length)+scale(pisc),
family = "beta",
ssn.object = nssn2,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(YrangeCat),
spcov_type = "exponential",
additive = "afvArea",
nugget_type = "none"
)
summary(ssn_modG)
loocv(ssn_modG)#0.325
nssn2$obs$pGlac[which(nssn2$obs$GNIS_NA=="Yellowstone River")]=NA
ssn_modG <- ssn_glm(
formula =   pGlac~ scale(temp)+scale(size)+scale(barrier)+scale(length)+scale(pisc),
family = "beta",
ssn.object = nssn2,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(YrangeCat),
spcov_type = "exponential",
additive = "afvArea",
nugget_type = "none"
)
nssn2$obs$pNat[which(nssn2$obs$GNIS_NA=="Yellowstone River")]=NA
ssn_modG <- ssn_glm(
formula =   pNat~ scale(temp)+scale(size)+scale(barrier)+scale(length)+scale(pisc),
family = "beta",
ssn.object = nssn2,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(YrangeCat),
spcov_type = "exponential",
additive = "afvArea",
nugget_type = "none"
)
ssn_modG <- ssn_glm(
formula =   pNat~ scale(temp)+scale(log(size))+scale(barrier)+scale(length)+scale(pisc),
family = "beta",
ssn.object = nssn2,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(YrangeCat),
spcov_type = "exponential",
additive = "afvArea",
nugget_type = "none"
)
ssn_modG <- ssn_glm(
formula =   pNat~ scale(temp)+scale(size)+scale(barrier)+scale(length)+scale(pisc),
family = "beta",
ssn.object = nssn2,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(YrangeCat),
spcov_type = "exponential",
additive = "afvArea",
#nugget_type = "none"
)
summary(ssn_modG)
loocv(ssn_modG)#0.325
#full model -- max likelihood
ssn_modN <- ssn_glm(
formula =   rGlac~ scale(temp)+scale(size)+scale(barrier)+scale(length)+scale(pisc),
family = "beta",
ssn.object = nssn,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(YrangeCat),
spcov_type = "exponential",
additive = "afvArea"
)
ssn_modG <- ssn_glm(
formula =   rGlac~ scale(temp)+scale(size)+scale(barrier)+scale(length)+scale(pisc),
family = "beta",
ssn.object = nssn2,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(YrangeCat),
spcov_type = "exponential",
additive = "afvArea",
#nugget_type = "none"
)
ssn_modG <- ssn_glm(
formula =   rGlac~ scale(temp)+scale(size)+scale(barrier)+scale(length)+scale(pisc),
family = "beta",
ssn.object = nssn2,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(YrangeCat),
spcov_type = "exponential",
additive = "afvArea",
nugget_type = "none"
)
nssn$obs%>%
ggplot(aes(x=size, y=length,label=GNIS_NA))+
geom_text()
nssn2=nssn
nssn$obs%>%
ggplot(aes(x=size, y=length,label=GNIS_NA))+
geom_text()
nssn$obs%>%
ggplot(aes(x=size, y=length,label=GNIS_NA))+
geom_label()
nssn2=nssn
hist(nssn$obs$size)
quantile(nssn$obs$size)
View(nssn$obs)
nssn$obs%>%filter(size>1000)%>%summarise(length(GNIS_NA))
nssn$obs%>%filter(size>2000)%>%summarise(length(GNIS_NA))
nssn2=nssn
nssn2$obs$pNat[which(nssn2$obs$size>2000)]=NA
nssn2$obs$rGlac[which(nssn2$obs$size>2000)]=NA
ssn_modG <- ssn_glm(
formula =   rGlac~ scale(temp)+scale(size)+scale(barrier)+scale(length)+scale(pisc),
family = "beta",
ssn.object = nssn,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(YrangeCat),
spcov_type = "exponential",
additive = "afvArea",
nugget_type = "none"
)
summary(ssn_modG)
ssn_modG <- ssn_glm(
formula =   rGlac~ scale(temp)+scale(size)+scale(barrier)+scale(length)+scale(pisc),
family = "beta",
ssn.object = nssn2,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(YrangeCat),
spcov_type = "exponential",
additive = "afvArea",
nugget_type = "none"
)
summary(ssn_modG)
nssn2$obs$rGlac[which(nssn2$obs$size>1000)]=NA
ssn_modG <- ssn_glm(
formula =   rGlac~ scale(temp)+scale(size)+scale(barrier)+scale(length)+scale(pisc),
family = "beta",
ssn.object = nssn2,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(YrangeCat),
spcov_type = "exponential",
additive = "afvArea",
nugget_type = "none"
)
summary(ssn_modG)
nssn2$obs$Turnover[which(nssn2$obs$size>1000)]=NA
ssn_modG <- ssn_glm(
formula =   Turnover~ scale(temp)+scale(size)+scale(barrier)+scale(length)+scale(pisc),
family = "beta",
ssn.object = nssn2,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(YrangeCat),
spcov_type = "exponential",
additive = "afvArea",
nugget_type = "none"
)
summary(ssn_modG)
loocv(ssn_modG)#0.325
loocv(ssn_modT)
nssn2$obs$pNat[which(nssn2$obs$size>1000)]=NA
ssn_modG <- ssn_glm(
formula =   pNat~ scale(temp)+scale(size)+scale(barrier)+scale(length)+scale(pisc),
family = "beta",
ssn.object = nssn2,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(YrangeCat),
spcov_type = "exponential",
additive = "afvArea",
nugget_type = "none"
)
ssn_modG <- ssn_glm(
formula =   pNat~ scale(temp)+scale(size)+scale(barrier)+scale(length)+scale(pisc),
family = "beta",
ssn.object = nssn2,
tailup_type = "exponential",
taildown_type = "exponential",
#  euclid_type = "exponential",
random = ~as.factor(YrangeCat),
spcov_type = "exponential",
additive = "afvArea",
nugget_type = "none"
)
ssn_modG <- ssn_glm(
formula =   pNat~ scale(temp)+scale(log(size))+scale(barrier)+scale(length)+scale(pisc),
family = "beta",
ssn.object = nssn2,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(YrangeCat),
spcov_type = "exponential",
additive = "afvArea",
nugget_type = "none"
)
summary(ssn_modG)
loocv(ssn_modG)#0.325
loocv(ssn_modN)
nobig=nssn2$obs%>%filter(size<1000)
hist(nobig$size)
##Load repeated site data
wc=read.csv("S2DR_v_1_1_WILDCARD.csv")
View(wc)
View(wc_early)
View(wc_late)
View(wc_earlylong)
View(wc_early)
wc_early[,c(2,3,5,6,7,29,36)]
bigcE=wc_early[,c(2,3,5,6,7,29,36)]
bigcL=wc_late[,c(2,3,5,6,7,29,36)]
left_join(bigcE,bigcL, by="RepeatID")
bigc=left_join(bigcE,bigcL, by="RepeatID")
View(bigc)
write.csv(bigc,file="BIGSTREAMcheck.csv")
removes=read.csv("REMOVES.csv")
View(removes)
removes=removes[,c(1,3)]
## import the streams, observation sites
streams <- st_read("NSI_fix6.shp")
obs <- st_read("newmetrics.shp")
removes=read.csv("REMOVES.csv")
removes=removes[,c(1,3)]
obs=left_join(obs,removes,by="RepeatID")
removes=removes%>%rename("RepetID"="RepeatID")
obs=left_join(obs,removes,by="RepetID")
obs=subset(obs,obs$GearMiss!="Y")
streams=st_cast(streams, to="LINESTRING")
streams <- st_transform(streams, crs = 5070)
obs <- st_transform(obs, crs = 5070)
## Plot the data using ggplot2
ggplot() +
geom_sf(data = streams) +
geom_sf(data = obs, color = "blue", size = 2) +
coord_sf(datum = st_crs(streams))
# --------------- Build the LSN -------------------------------
## Set the lsn.path variable
lsn.path <- "persist_LSN/"
## Build the LSN
edges <- lines_to_lsn(
streams = streams,
lsn_path = lsn.path,
check_topology = TRUE,
snap_tolerance = 0.05,
topo_tolerance = 20,
overwrite = TRUE
)
# ----------- Incorporate sites into LSN -----------------------
## Incorporate observations. Pay attention to output messages in R
obs <- sites_to_lsn(
sites = obs,
edges = edges,
lsn_path = lsn.path,
file_name = "obs",
snap_tolerance = 200,
save_local = TRUE,
overwrite = TRUE
)
# --------- Calculate upstream distance for edges ------------
edges$GNIS_ID=as.numeric(edges$GNIS_ID)
edges <- updist_edges(
edges = edges,
save_local = TRUE,
lsn_path = lsn.path,
calc_length = TRUE
)
# ---------- Calculate upstream distance for sites -----------
site.list <- updist_sites(
sites = list(
obs = obs),
edges = edges,
length_col = "Length",
save_local = TRUE,
lsn_path = lsn.path
)
## Plot the upstream distances for edges and obs
ggplot() +
geom_sf(data = edges, aes(color = upDist)) +
geom_sf(data = site.list$obs, aes(color = upDist)) +
coord_sf(datum = st_crs(streams)) +
scale_color_viridis_c()
# ------- Calculate AFV for edges --------------------------------
## Summarize h2oAreaKm2 and check for zeros
summary(edges$TotDASqKM)
edges <- afv_edges(
edges = edges,
infl_col = "TotDASqKM",
segpi_col = "areaPI",
afv_col = "afvArea",
lsn_path = lsn.path
)
# ------- Calculate AFV for sites -------------------------------
site.list <- afv_sites(
sites = site.list,    ## Input is a named list
edges = edges,
afv_col = "afvArea",
save_local = TRUE,
lsn_path = lsn.path
)
# ---------- Assemble the SSN Object -----------------------------
nssn <- ssn_assemble(
edges = edges,
lsn_path = lsn.path,
obs_sites = site.list$obs,
ssn_path = "nssn.ssn",
import = TRUE,
check = TRUE,
afv_col = "afvArea",
overwrite = TRUE
)
## Look at the observations in the SSN object. Notice the new columns
## added when the SSN was assembled
class(nssn$obs)
names(nssn$obs)
## Plot ssn
ggplot() +
geom_sf(
data = nssn$edges,
color = "medium blue",
aes(linewidth = log10(TotDASqKM))
) +
scale_linewidth(range = c(0.1, 2)) +
geom_sf(
data = nssn$obs,
size = 1.7
)
# ---- Create Distance Matrices ----------------------------------
## Generate hydrologic distance matrices
ssn_create_distmat(nssn)
## Output a list of distance matrices for obs
obs.distmat<- ssn_get_stream_distmat(nssn,
name = "obs")
names(obs.distmat)
colnames(obs.distmat[[1]])
## Create symmetric hydrologic distance matrix
obs.distmat2 <- obs.distmat[[1]] + t(obs.distmat[[1]])
view(nssn$obs)
#-----------Native Species Persistence Models-------------------------------------------------------------------------
mdata=subset(nssn$obs,!is.na(nssn$obs$pNat))
mdata=mdata[,c(16,21,23,24,32)]
chart.Correlation(mdata, histogram=TRUE, pch=19)
#==================================================================================
#============================SECTION 2: SSN Models for Community & Functional Level
#==================================================================================
#Identify predictors with multicolinearity
library(PerformanceAnalytics)
mdata=nssn$obs[,c(16,21,23,24,32)]
mdata=as.data.frame(mdata)
mdata$geometry=NULL
chart.Correlation(mdata, histogram=TRUE, pch=19)
#rename variables
nssn$obs=nssn$obs%>%rename("temp"="S1_93_1", "size"="F_MAUG_", "barrier"="DSbarrr","length"="Lngth_k","pisc"="nnPreds")
nssn$obs=nssn$obs%>%rename("pComm"="persCmm", "pNat"="persNtv", "rGlac"="prsSmGl","rPela"="pelagcs","rPeri"="peridcs","rMont"="montane")
quantile(nssn$obs$Yrange)
quantile(nssn$obs$Yrange)
nssn$obs$YrangeCat=NA
nssn$obs$YrangeCat[which(nssn$obs$Yrange<16)]="S"
nssn$obs$YrangeCat[which(nssn$obs$Yrange>=16 & nssn$obs$Yrange<22)]="M"
nssn$obs$YrangeCat[which(nssn$obs$Yrange>=22 & nssn$obs$Yrange<30)]="L"
nssn$obs$YrangeCat[which(nssn$obs$Yrange>=30)]="XL"
#full model -- max likelihood
ssn_mod <- ssn_glm(
formula =   pComm~ scale(temp)+scale(size)+scale(barrier)+scale(length)+scale(pisc),
family = "beta",
ssn.object = nssn,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(YrangeCat),
spcov_type = "exponential",
additive = "afvArea"
)
summary(ssn_mod)
#-----------Native Species Persistence Models-------------------------------------------------------------------------
mdata=subset(nssn$obs,!is.na(nssn$obs$pNat))
mdata=mdata[,c(16,21,23,24,32)]
chart.Correlation(mdata, histogram=TRUE, pch=19)
#-----------Native Species Persistence Models-------------------------------------------------------------------------
mdata=subset(nssn$obs,!is.na(nssn$obs$pNat))
View(mdata)
View(mdata)
mdata=mdata[,c(16,21,23,24,32)]
View(mdata)
mdata$geometry=NULL
chart.Correlation(mdata, histogram=TRUE, pch=19)
chart.Correlation(mdata, histogram=TRUE, pch=19)
#full model -- max likelihood
ssn_modN <- ssn_glm(
formula =   pNat~ scale(temp)+scale(size)+scale(barrier)+scale(length)+scale(pisc),
family = "beta",
ssn.object = nssn,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(YrangeCat),
spcov_type = "exponential",
additive = "afvArea"
)
summary(ssn_modN)
View(nssn$obs)
#null model -- max likelihood
ssn_null <- ssn_glm(
formula =   pNat~ 1,
family = "beta",
ssn.object = nssn,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(YrangeCat),
spcov_type = "exponential",
additive = "afvArea"
)
loocv(ssn_modN)#0.289
loocv(ssn_null)#0.293
#-------------------Native Sp without "m" gear sites
nssn2=nssn
nssn2$obs$pNat[which(nssn2$obs$GearMiss=="M")]=NA
nssn2$obs%>%group_by(GearMiss)%>%summarise(length(RepetID))
#full nssn#full model -- max likelihood
ssn_modN <- ssn_glm(
formula =   pNat~ scale(temp)+scale(size)+scale(barrier)+scale(length)+scale(pisc),
family = "beta",
ssn.object = nssn2,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(YrangeCat),
spcov_type = "exponential",
additive = "afvArea"
)
summary(ssn_modN)
211+191
