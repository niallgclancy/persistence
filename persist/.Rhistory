site.list <- afv_sites(
sites = site.list,    ## Input is a named list
edges = edges,
afv_col = "afvArea",
save_local = TRUE,
lsn_path = lsn.path
)
# ---------- Assemble the SSN Object -----------------------------
nssn <- ssn_assemble(
edges = edges,
lsn_path = lsn.path,
obs_sites = site.list$obs,
ssn_path = "nssn.ssn",
import = TRUE,
check = TRUE,
afv_col = "afvArea",
overwrite = TRUE
)
## Look at the observations in the SSN object. Notice the new columns
## added when the SSN was assembled
class(nssn$obs)
names(nssn$obs)
## Plot ssn
ggplot() +
geom_sf(
data = nssn$edges,
color = "medium blue",
aes(linewidth = log10(TotDASqKM))
) +
scale_linewidth(range = c(0.1, 2)) +
geom_sf(
data = nssn$obs,
size = 1.7
)
# ---- Create Distance Matrices ----------------------------------
## Generate hydrologic distance matrices
ssn_create_distmat(nssn)
## Output a list of distance matrices for obs
obs.distmat<- ssn_get_stream_distmat(nssn,
name = "obs")
names(obs.distmat)
colnames(obs.distmat[[1]])
## Create symmetric hydrologic distance matrix
obs.distmat2 <- obs.distmat[[1]] + t(obs.distmat[[1]])
#========================================================================
#============================SECTION 2: Models for Community-Wide Metrics
#========================================================================
#----------------Identify predictors with multicolinearity---------------
library(PerformanceAnalytics)
mdata=obs[,c(14,19,20,21,22,23,30,31)]
mdata=as.data.frame(mdata)
mdata$geometry=NULL
chart.Correlation(mdata, histogram=TRUE, pch=19)
# ---- Fit spatial stream-network model -------------------------------
#------Beta regression can't use 0 or 1...convert to near 0 and 1------
nssn2=nssn
#Full Community Persistence
nssn2$obs$persComm=as.numeric(nssn2$obs$persComm)
nssn2$obs$persComm[which(nssn2$obs$persComm==0)]=0.000000001
nssn2$obs$persComm[which(nssn2$obs$persComm==1)]=0.999999999
anyNA(nssn2$obs$persComm)
#Native Sp. Persistence
nssn2$obs$persNative=as.numeric(nssn2$obs$persNative)
nssn2$obs$persNative=as.numeric(nssn2$obs$persNative)
nssn2$obs$persNative[which(nssn2$obs$persNative==0)]=0.000000001
nssn2$obs$persNative[which(nssn2$obs$persNative==1)]=0.999999999
#Early Postglacial Colonists Persistence
nssn2$obs$persGlacE=as.numeric(nssn2$obs$persGlacE)
nssn2$obs$persGlacE[which(nssn2$obs$persGlacE==0)]=0.000000001
nssn2$obs$persGlacE[which(nssn2$obs$persGlacE==1)]=0.999999999
#Late Postglacial Colonists Persistence
nssn2$obs$persGlacL=as.numeric(nssn2$obs$persGlacL)
nssn2$obs$persGlacL[which(nssn2$obs$persGlacL==0)]=0.000000001
nssn2$obs$persGlacL[which(nssn2$obs$persGlacL==1)]=0.999999999
################################
###############################Beta Regression for proportion metrics not working 11-19-2024
###############################
##Scale covariates to determine variable importance
ssn_mod <- ssn_glm(
formula =   persComm~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
ssn.object = nssn2,
tailup_type = "exponential",
taildown_type = "exponential",
euclid_type = "exponential",
random = ~as.factor(Yrange),
#spcov_initial=1,
#dispersion_initial = 1,
spcov_type = "exponential",
additive = "afvArea", estmethod = "reml"
)
## ---- Fit spatial (not stream-network) model -------------------------------
######Attempt with spmodel using euclidean only
library(spmodel)
# ---- Fit model for Community Persistence ----------------------------
obs2=obs
obs2$persComm[which(obs2$persComm==0)]=0.0000001
obs2$persComm[which(obs2$persComm==1)]=0.9999999
obs2$persNative[which(obs2$persNative==0)]=0.0000001
obs2$persNative[which(obs2$persNative==1)]=0.9999999
View(obs2)
write.csv(wc_nn,file = "processingunits.csv")
pu=read.csv("processingunits.csv")
View(pu)
pu$X=NULL
obs2=left_join(obs2,pu,by="RepeatID")
obsMO=subset(obs2, obs2$PU!="GREEN")
obsGR=subset(obs2, obs2$PU=="GREEN")
#
#------------------Missouri Basin Models-------------------------------------------------
#
test.mod<- spglm(
formula = persComm~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
random = ~as.factor(Yrange),
data = obsMO, estmethod = "ml")
summary(test.mod)
loocv(test.mod) #RMSPE=0.254
# ---- Fit model for Native Species Persistence----------------------------
#------------------Missouri Basin Models-------------------------------------------------
#
test.mod<- spglm(
formula = persNative~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
random = ~as.factor(Yrange),
data = obsMO, estmethod = "ml")
summary(test.mod)
loocv(test.mod) #RMSPE=0.254
####Compare to intercept only (null)   #NOT WORKING EITHER...same error as with SSN2
test.mod.null<- spglm(
formula = persNative~ 1,
family = "beta",
random = ~as.factor(Yrange),
data = obsMO, estmethod = "ml")
summary(test.mod.null)
loocv(test.mod.null) #0.264
#compare to only significant variables
test.mod.sig<- spglm(
formula = persNative~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(Length_km),
family = "beta",
random = ~as.factor(Yrange),
data = obsMO, estmethod = "ml")
summary(test.mod.sig)
loocv(test.mod.sig) #RMSPE=0.277
#Non-Spatial Model
test.mod.nonspatial<- glm(
formula = persNative~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds)+(1|Yrange),
family = "binomial",
data = obsMO)
test.mod.nonspatial<- spglm(
formula = persNative~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
random = ~as.factor(Yrange),
data = obsMO, estmethod = "ml", spcov_type = "none")
summary(test.mod.nonspatial)
loocv(test.mod.nonspatial)
glances(test.mod,test.mod.null,
test.mod.sig,test.mod.nonspatial)
#
#------------------Green Basin Models-------------------------------------------------
#
#
test.mod<- spglm(
formula = persNative~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
random = ~as.factor(Yrange),
data = obsGR, estmethod = "ml")
summary(test.mod)
loocv(test.mod)
plot(persNative~S1_93_11,data = obsGR, main="GR Basin Native Sp. Persistence vs. Temperature")
####Compare to intercept only (null)   -no convergence
test.mod.null<- spglm(
formula = persNative~ 1,
family = "beta",
random = ~as.factor(Yrange),
data = obsGR, estmethod = "ml")
summary(test.mod.null)
loocv(test.mod.null)
#compare to only significant variables--no convergence
test.mod.sig<- spglm(
formula = persNative~ scale(F_MAUG_HIS),
family = "beta",
random = ~as.factor(Yrange),
data = obsGR, estmethod = "ml")
summary(test.mod.sig)
loocv(test.mod.sig) #RMSPE=0.277
summary(test.mod)
summary(test.mod.sig)
loocv(test.mod.sig) #RMSPE=0.277
#compare to only variables--no convergence
test.mod.sig<- spglm(
formula = persNative~ scale(S1_93_11),
family = "beta",
random = ~as.factor(Yrange),
data = obsGR, estmethod = "ml")
summary(test.mod.sig)
loocv(test.mod.sig) #RMSPE=0.277
#compare to only significant variables--no convergence
test.mod.sig<- spglm(
formula = persNative~ scale(F_MAUG_HIS),
family = "beta",
random = ~as.factor(Yrange),
data = obsGR, estmethod = "ml")
summary(test.mod.sig)
loocv(test.mod.sig) #RMSPE=0.277
#Barrier
test.mod.sig<- spglm(
formula = persNative~ scale(DSbarrier),
family = "beta",
random = ~as.factor(Yrange),
data = obsGR, estmethod = "ml")
summary(test.mod.sig)
loocv(test.mod.sig) #RMSPE=0.277
#ReachL
test.mod.sig<- spglm(
formula = persNative~ scale(Length_km),
family = "beta",
random = ~as.factor(Yrange),
data = obsGR, estmethod = "ml")
summary(test.mod.sig)
loocv(test.mod.sig) #RMSPE=0.277
#compare to only significant variables--no convergence
test.mod.sig<- spglm(
formula = persNative~ scale(nnPreds),
family = "beta",
random = ~as.factor(Yrange),
data = obsGR, estmethod = "ml")
summary(test.mod.sig)
loocv(test.mod.sig) #RMSPE=0.277
#Non-Spatial Model
test.mod.nonspatial<- spglm(
formula = persNative~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
random = ~as.factor(Yrange),
data = obsGR, estmethod = "ml", spcov_type = "none")
summary(test.mod.nonspatial)
loocv(test.mod.nonspatial)
#Temp
test.mod.sig<- spglm(
formula = persNative~ scale(S1_93_11),
family = "beta",
random = ~as.factor(Yrange),
data = obsMO, estmethod = "ml")
summary(test.mod.sig)
loocv(test.mod.sig)
#Size
test.mod.sig<- spglm(
formula = persNative~ scale(F_MAUG_HIS),
family = "beta",
random = ~as.factor(Yrange),
data = obsMO, estmethod = "ml")
summary(test.mod.sig)
loocv(test.mod.sig)
#Barrier
test.mod.sig<- spglm(
formula = persNative~ scale(DSbarrier),
family = "beta",
random = ~as.factor(Yrange),
data = obsMO, estmethod = "ml")
summary(test.mod.sig)
loocv(test.mod.sig)
#ReachL
test.mod.sig<- spglm(
formula = persNative~ scale(Length_km),
family = "beta",
random = ~as.factor(Yrange),
data = obsMO, estmethod = "ml")
summary(test.mod.sig)
loocv(test.mod.sig)
#Pisciv
test.mod.sig<- spglm(
formula = persNative~ scale(nnPreds),
family = "beta",
random = ~as.factor(Yrange),
data = obsMO, estmethod = "ml")
summary(test.mod.sig)
loocv(test.mod.sig) #RMSPE=0.277
test.mod.nonspatial<- spglm(
formula = persNative~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(DSbarrier)+scale(Length_km)+scale(nnPreds),
family = "beta",
random = ~as.factor(Yrange),
data = obsMO, estmethod = "ml", spcov_type = "none")
summary(test.mod.nonspatial)
loocv(test.mod.nonspatial)
#ReachL*TEMP
test.mod.sig<- spglm(
formula = persNative~ scale(S1_93_11)*scale(Length_km),
family = "beta",
random = ~as.factor(Yrange),
data = obsMO, estmethod = "ml")
summary(test.mod.sig)
loocv(test.mod.sig)
#ReachL*TEMP
test.mod.sig<- spglm(
formula = persNative~ scale(F_MAUG_HIS)*scale(Length_km),
family = "beta",
random = ~as.factor(Yrange),
data = obsMO, estmethod = "ml")
summary(test.mod.sig)
loocv(test.mod.sig)
#ReachL*TEMP
test.mod.sig<- spglm(
formula = persNative~ scale(S1_93_11)+scale(Length_km),
family = "beta",
random = ~as.factor(Yrange),
data = obsMO, estmethod = "ml")
summary(test.mod.sig)
loocv(test.mod.sig)
#ReachL*TEMP
test.mod.sig<- spglm(
formula = persNative~ scale(S1_93_11)+scale(F_MAUG_HIS),
family = "beta",
random = ~as.factor(Yrange),
data = obsMO, estmethod = "ml")
summary(test.mod.sig)
loocv(test.mod.sig)
#ReachL*TEMP
test.mod.sig<- spglm(
formula = persNative~ scale(S1_93_11)+scale(F_MAUG_HIS)+scale(Length_km),
family = "beta",
random = ~as.factor(Yrange),
data = obsMO, estmethod = "ml")
summary(test.mod.sig)
loocv(test.mod.sig)
#Interaction attempts---nothing better than reach length alone
test.mod.sig<- spglm(
formula = persNative~ scale(S1_93_11)*scale(F_MAUG_HIS)*scale(Length_km),
family = "beta",
random = ~as.factor(Yrange),
data = obsMO, estmethod = "ml")
summary(test.mod.sig)
loocv(test.mod.sig)
#---------------------Net Species Change------------------------------------------
NET=read.csv("PersistenceMetrics.csv")
NET=NET%>%pivot_longer(cols = c(28:121),names_to = "Species",values_to = "change")
NET=subset(NET,!is.na(NET$change))
NET2=NET%>%group_by(Species)%>%summarise(net=sum(change))
NET3=NET%>%filter(change!=-1)%>%group_by(Species)%>%summarise(LateNum=length(change))
NET=NET%>%filter(change!=1)%>%group_by(Species)%>%summarise(EarlyNum=length(change))
NET=left_join(NET2,NET,by="Species")
NET=left_join(NET,NET3,by="Species")
NET$EarlyNum[which(is.na(NET$EarlyNum))]=0
NET$LateNum[which(is.na(NET$LateNum))]=0
NET$propChange=NA
NET$propChange=NET$LateNum/NET$EarlyNum
NETsub=subset(NET,NET$EarlyNum>=15|NET$LateNum>=15)
NETsub=subset(NETsub,NETsub$Species!="ONC" & NETsub$Species!="FMxWSU")
traits=read.csv("traits.csv")
traits=traits%>%rename("Species"="Code")
NETsub=left_join(NETsub,traits,by="Species")
NETsub$CommonName[which(NETsub$CommonName=="Northern Redbelly Dace")]="Nor. Redbelly Dace"
NETsub$CommonName[which(NETsub$CommonName=="Rocky Mountain Cutthroat Trout")]="R.M. Cutthroat Trout"
declining=NETsub%>%filter(propChange<1)%>%
ggplot(aes(x=reorder(CommonName,propChange),y=propChange))+
geom_segment( aes(x=CommonName, xend=CommonName, y=1, yend=propChange), color="grey") +
geom_point(aes(colour = as.factor(Status)), size=3)+
scale_color_manual(values = c("#ff9999","#005555"))+
scale_x_discrete(position = "top")+
scale_y_continuous(breaks = seq(0, 1, by = 0.1), limits = c(0.4,1))+
theme_light()+
ylab(label = "Net Change in Proportional Occurrence")+
xlab(label="")+
ggtitle(label = "Declining Species")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=0,face = 2),
legend.title = element_blank(),
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.text.y = element_text(size=12),
axis.ticks.x = element_blank())
declining
#---------------------Net Species Changes to Only Native Populations------------------------------------------
NET=read.csv("PersistenceMetrics.csv")
NET=NET%>%pivot_longer(cols = c(28:121),names_to = "Species",values_to = "change")
####FROM HERE, MUST RUN "DatasetPrep.R" for section
NET=subset(NET,!is.na(NET$change))
View(NET)
####FROM HERE, MUST RUN "DatasetPrep.R" for section
NET=subset(NET,!is.na(NET$change))
traits=read.csv("traits.csv")
traits=traits%>%rename("Species"="Code")
NET=left_join(NET,traits,by="Species")
View(NET)
NET$Status[which(NET$Species=="RDSH" & NET$RepeatID %in% rdshnn)]="Introduced"
NET$Status[which(NET$Species=="RDSH")]="Native"
NET$Status[which(NET$Species=="RDSH" & NET$RepeatID %in% rdshnn)]="Introduced"
NET$Status[which(NET$Species=="LKCH" & NET$RepeatID %in% lkchnn)]="Introduced"
NET$Status[which(NET$Species=="FHMN" & NET$RepeatID %in% FHMNnn)]="Introduced"
NET$Status[which(NET$Species=="LNDC" & NET$RepeatID %in% LNDCnn)]="Introduced"
NET$Status[which(NET$Species=="CRCH" & NET$RepeatID %in% CRCHnn)]="Introduced"
NET$Status[which(NET$Species=="BLBH")]="Native"
NET$Status[which(NET$Species=="BLBH" & NET$RepeatID %in% BLBHnn)]="Introduced"
NET$Status[which(NET$Species=="CCAT" & NET$RepeatID %in% CCATnn)]="Introduced"
NET$Status[which(NET$Species=="LING" & NET$RepeatID %in% LINGnn)]="Introduced"
NET$Status[which(NET$Species=="WSU" & NET$RepeatID %in% WSUnn)]="Introduced"
NET$Status[which(NET$Species=="RMCT" & NET$RepeatID %in% RMCTnn)]="Introduced"
NET$Status[which(NET$Species=="DRUM")]="Native"
NET$Status[which(NET$Species=="DRUM" & NET$RepeatID %in% drumnn)]="Introduced"
NET$Status[which(NET$Species=="PKF" & NET$RepeatID %in% pkfnn)]="Introduced"
NET$Status[which(NET$Species=="PTMN" & NET$RepeatID %in% ptmnnn)]="Introduced"
NET$Status[which(NET$Species=="BRSB")]="Native"
NET$Status[which(NET$Species=="BRSB" & NET$RepeatID %in% brsbnn)]="Introduced"
NET=subset(NET,NET$Status=="Native")
NET2=NET%>%group_by(Species)%>%summarise(net=sum(change))
NET3=NET%>%filter(change!=-1)%>%group_by(Species)%>%summarise(LateNum=length(change))
NET=NET%>%filter(change!=1)%>%group_by(Species)%>%summarise(EarlyNum=length(change))
NET=left_join(NET2,NET,by="Species")
NET=left_join(NET,NET3,by="Species")
NET$EarlyNum[which(is.na(NET$EarlyNum))]=0
NET$LateNum[which(is.na(NET$LateNum))]=0
NET$propChange=NA
NET$propChange=NET$LateNum/NET$EarlyNum
NETsub=subset(NET,NET$EarlyNum>=15|NET$LateNum>=15)
NETsub=subset(NETsub,NETsub$Species!="ONC" & NETsub$Species!="FMxWSU")
NETsub$CommonName[which(NETsub$CommonName=="Northern Redbelly Dace")]="Nor. Redbelly Dace"
NETsub$CommonName[which(NETsub$CommonName=="Rocky Mountain Cutthroat Trout")]="R.M. Cutthroat Trout"
traits
View(traits)
traits2=traits[,c(1,3)]
left_join(NETsub,traits2,by="Species")
NETsub=left_join(NETsub,traits2,by="Species")
NETsub$CommonName[which(NETsub$CommonName=="Northern Redbelly Dace")]="Nor. Redbelly Dace"
NETsub$CommonName[which(NETsub$CommonName=="Rocky Mountain Cutthroat Trout")]="R.M. Cutthroat Trout"
declining=NETsub%>%filter(propChange<1)%>%
ggplot(aes(x=reorder(CommonName,propChange),y=propChange))+
geom_segment( aes(x=CommonName, xend=CommonName, y=1, yend=propChange), color="grey") +
geom_point(aes(colour = as.factor(Status)), size=3)+
scale_color_manual(values = c("#ff9999","#005555"))+
scale_x_discrete(position = "top")+
scale_y_continuous(breaks = seq(0, 1, by = 0.1), limits = c(0.4,1))+
theme_light()+
ylab(label = "Net Change in Proportional Occurrence")+
xlab(label="")+
ggtitle(label = "Declining Species")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=0,face = 2),
legend.title = element_blank(),
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.text.y = element_text(size=12),
axis.ticks.x = element_blank())
declining
declining=NETsub%>%filter(propChange<1)%>%
ggplot(aes(x=reorder(CommonName,propChange),y=propChange))+
geom_segment( aes(x=CommonName, xend=CommonName, y=1, yend=propChange), color="grey") +
geom_point(size=3)+
scale_color_manual(values "#005555")+
declining=NETsub%>%filter(propChange<1)%>%
ggplot(aes(x=reorder(CommonName,propChange),y=propChange))+
geom_segment( aes(x=CommonName, xend=CommonName, y=1, yend=propChange), color="grey") +
geom_point(size=3, color="#005555")+
scale_x_discrete(position = "top")+
scale_y_continuous(breaks = seq(0, 1, by = 0.1), limits = c(0.4,1))+
theme_light()+
ylab(label = "Net Change in Proportional Occurrence")+
xlab(label="")+
ggtitle(label = "Declining Species")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=0,face = 2),
legend.title = element_blank(),
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.text.y = element_text(size=12),
axis.ticks.x = element_blank())
declining
ggsave(filename="DecliningSpNATIVE.tiff",dpi = 400, width = 8, height = 6, units = "in")
increasing=NETsub%>%filter(propChange>=1)%>%
ggplot(aes(x=reorder(CommonName,-propChange),y=propChange))+
geom_segment( aes(x=CommonName, xend=CommonName, y=1, yend=propChange), color="grey") +
geom_point(size=3, color="#005555")+
theme_light()+
ylab(label = "Net Change in Proportional Occurrence")+
scale_y_continuous(breaks=seq(1,4,by=1), limits = c(1,4), labels = c("1.0","2.0","3.0","4.0"))+
xlab(label="")+
ggtitle(label = "Increasing or Stable Species")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,face = 2),
legend.title = element_blank(),
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.text.y = element_text(size=12),
axis.ticks.x = element_blank())
increasing
increasing=NETsub%>%filter(propChange>=1)%>%
ggplot(aes(x=reorder(CommonName,-propChange),y=propChange))+
geom_segment( aes(x=CommonName, xend=CommonName, y=1, yend=propChange), color="grey") +
geom_point(size=3, color="#005555")+
theme_light()+
ylab(label = "Net Change in Proportional Occurrence")+
scale_y_continuous(breaks=seq(1,2,by=0.5), limits = c(1,4))+
xlab(label="")+
ggtitle(label = "Increasing or Stable Species")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,face = 2),
legend.title = element_blank(),
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.text.y = element_text(size=12),
axis.ticks.x = element_blank())
increasing
increasing=NETsub%>%filter(propChange>=1)%>%
ggplot(aes(x=reorder(CommonName,-propChange),y=propChange))+
geom_segment( aes(x=CommonName, xend=CommonName, y=1, yend=propChange), color="grey") +
geom_point(size=3, color="#005555")+
theme_light()+
ylab(label = "Net Change in Proportional Occurrence")+
scale_y_continuous(breaks=seq(1,2,by=0.5), limits = c(1,2))+
xlab(label="")+
ggtitle(label = "Increasing or Stable Species")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,face = 2),
legend.title = element_blank(),
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.text.y = element_text(size=12),
axis.ticks.x = element_blank())
increasing
ggsave(filename="IncreasingSpNative.tiff",dpi = 400, width = 8, height = 6, units = "in")
